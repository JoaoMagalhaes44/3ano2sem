var http = require('http');
var fs = require('fs');
var url = require('url');
var axios = require('axios');


function genOcorr(Ocorr){
    pagHTML = `<!DOCTYPE html> 
        <html>
            <head>
                <meta charset="utf-8">
                <title>Ocorrencia ${Ocorr.id}</title>
                <link rel="stylesheet" href="/w3.css">
            </head>
            <body>
                <div class="w3-card-4">
        
                    <header class="w3-container w3-blue">
                    <h1>Ocorrencia ${Ocorr.id}</h1>
                    </header>
                    
                    <div class="w3-container">
                        <pre>
                            ${JSON.stringify(Ocorr)}
                        </pre>
                    </div>
                    <footer class="w3-container w3-blue">
                        <h5>Generated by ENGWEB24: João Magalhães [<a href='/Ocorrencias'> Voltar à lista </a>]</h5>
                    </footer>
                    </div>
            </body>
        </html>
    `;
    return pagHTML;
}

function genOcorrencias(ListOcorrencias) {
    pagHTML = `<!DOCTYPE html> 
    <html>
        <head>
            <meta charset="utf-8">
            <title>Lista de ocorrencias</title>
            <link rel="stylesheet" href="/w3.css">
        </head>
        <body>
            <div class="w3-card-4">
    
                <header class="w3-container w3-blue">
                  <h1>Lista de ocorrencias</h1>
                </header>
                
                <div class="w3-container">
                    <table class="w3-table w3-striped">
                        <tr>
                            <th>Identificador</th>
                            <th>Data</th>
                            <th>Animal</th>
                        </tr>
    `;
    ListOcorrencias.forEach(ocorr => {
        pagHTML += `
            <tr> 
                <td><a href = '/Ocorrencias/${ocorr.id}'>${ocorr.id}</a></td>
                <td>${ocorr.bite_date}</td>
                <td>${ocorr.SpeciesIDDesc}</td>
            </tr>
        `;
    });
    pagHTML += `
                </table>
            </div>
                    
            <footer class="w3-container w3-blue">
                <h5>Generated by ENGWEB24: João Magalhães</h5>
            </footer>
            
            </div>
        </body>
        </html>
    `;
    return pagHTML;
}

http.createServer(function (req, res) {
    var regex = /^\/Ocorrencias\/[a-z0-9]{4}$/;
    var q = url.parse(req.url, true);

    if (q.pathname == "/") {
        fs.readFile('principal.html', function (erro, dados) {
            res.writeHead(200, { 'Content-Type': 'text/html' });
            res.write(dados);
            res.end();
        });
    } else if (q.pathname == '/Ocorrencias') {
        axios.get('http://localhost:3000/Ocorrencias')
            .then(resp => {
                dados = resp.data;
                pagHTML = genOcorrencias(dados);
                res.writeHead(200, { 'Content-Type': 'text/html' });  // Corrigido o tipo de conteúdo
                res.write(pagHTML);  // Corrigido para escrever a página HTML gerada
                res.end();
            })
            .catch(function (erro) {  // Corrigido o erro de sintaxe
                res.writeHead(500, { 'Content-Type': 'text/html' });  // Corrigido o tipo de conteúdo
                res.write("<pre>" + erro + "</pre>");
                res.end();
            });
    } else if (regex.test(q.pathname)) {
        axios.get('http://localhost:3000' + q.pathname)
            .then(resp => {
                dados = resp.data;
                pagHTML = genOcorr(dados);
                res.writeHead(200, { 'Content-Type': 'text/html' });  // Corrigido o tipo de conteúdo
                res.write(pagHTML);  // Corrigido para escrever a página HTML gerada
                res.end();
            })
            .catch(function (erro) {  // Corrigido o erro de sintaxe
                res.writeHead(500, { 'Content-Type': 'text/html' });  // Corrigido o tipo de conteúdo
                res.write("<pre>" + erro + "</pre>");
                res.end();
            });
    } else if (q.pathname == '/w3.css') {
        fs.readFile('w3.css', function (erro, dados) {
            res.writeHead(200, { 'Content-Type': 'text/css' });
            res.write(dados);
            res.end();
        });
    } else {
        res.writeHead(400, { 'Content-Type': 'text/html; charset=utf-8' });
        res.write('<p>Erro: pedido não suportado.</p>');
        res.write('<pre>' + q.pathname + '</pre>');
        res.end();
    }
    console.log(q.pathname);
}).listen(7777);
